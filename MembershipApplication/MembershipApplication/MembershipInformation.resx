<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>