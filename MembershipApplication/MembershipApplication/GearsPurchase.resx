<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QCsRXhpZgAATU0AKgAAAAgAAwE7AAIAAAAKAAAAModpAAQAAAAB
        AAAAPJydAAEAAAAIAAAAnAAAAADshqHrqoXqt7wAAASQAwACAAAAFAAAAHKQBAACAAAAFAAAAIaSkQAC
        AAAAAzE1AACSkgACAAAAAzE1AAAAAAAAMjAxODoxMjowNiAyMjoyOTo1MwAyMDE4OjEyOjA2IDIyOjI5
        OjUzAAAAocGFuvytAAD/2wBDAAcFBQYFBAcGBQYIBwcIChELCgkJChUPEAwRGBUaGRgVGBcbHichGx0l
        HRcYIi4iJSgpKywrGiAvMy8qMicqKyr/2wBDAQcICAoJChQLCxQqHBgcKioqKioqKioqKioqKioqKioq
        KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKir/wAARCABRAFwDASIAAhEBAxEB/8QAHwAAAQUB
        AQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1Fh
        ByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNk
        ZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT
        1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL
        /8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYk
        NOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImK
        kpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3
        +Pn6/9oADAMBAAIRAxEAPwD6RooooAKKKKACkpaKAGYK9OR6U4EHpS00r3HWgB1FNDZ4PBp1ABRRRQAU
        UVx/jXxdd+HLi1hs4IpDMrMzS5OMH2IqoxcnZCbSV2dTc3dvZpvupo4Uzjc7YFMttRs7xytpdQzFRkhH
        BIryrxB4gufEXhaG4u4442juygEYIBG3Pc1J8MP+RplH/Tq3/oS1t7G0HJmftPeset0UUVzmoVDc3VvZ
        x+ZdTJCmcbnYAZqauD+Kv/IHsv8Aruf/AEGrhHmlYUnZXOxttQsr5itrdRTMvJCOCRVnIHU14t4Pv5NL
        udQvYVVnhtGdVboTkda6Dw747vtW8RQ2V3bwCOZipZAcrwTnk+1aTotN2IjUT3PSgQehzSFsGqy4WZVX
        oatYrA0KWs6j/ZOjXN95fmeQm7ZnGa8s8a6q2t2uk37xCIywv8gOcYbFepa1p39raLdWPmeX56bd+M4r
        yzxppR0W10ixaUSmKF/nC4zls9K6aFr+ZlUvYzT/AMiWv/X8f/QBV3wNenTdTv71UEhgsJHCk4zhlqkf
        +RLX/r+P/oAq94GsjqWpX9kH8sz2EibsZxll5rolbkdzJbo2/wDha1x/0DI/+/p/wpP+FrXH/QMj/wC/
        p/wo/wCFVy/9BRf+/J/xo/4VXL/0FF/78n/Gsv3Bf7wX/ha0/wD0DI/+/p/wqj4p8Qv4k8KW11JbrAUv
        WjCq2c/IDn9aun4WSjrqif8Afk/41R8UaA/hzwrbWrziffeNJuC7cZTGP0px9lzLlE+e2piaD/x7at/1
        4t/MU7wi4TxZZSFAdpdvrhDTdC/49dX/AOvFv/QhTvCKeZ4ssU6bmZc/VGrV/aIXQ9Q8JeIF8R2s87Wo
        geGTYcNnPGc10WawPCfhz/hHLKeE3HntNJvJ27ccYxW6U9Dj6V58rX906o3tqPrjvG3hO78RXNrLZyxJ
        5KMrCTIzk57V2NFEZOLugaTVmeQeINAufD3hWG3u3jdpLsuDHnAG3FS/DAf8VTKf+nVv/Qlr1O5s4LxN
        lzDHMmc7ZFDD9ajttMs7Ny1pawwE8Exxhc/lW3trwaZn7PW5bpCcUE4poG7k1zmoAbuT0rhvioP+JPY/
        9dz/AOgmu8qG5tILyMR3UMcyZztkUMM/jVwlyyuTJXVjxrwfYSancahZQsqvNaMqlugORXS+HPAGoaXr
        9tfXVxAY4CWKoSSeCPT3rvLbTbSzYm0tYYSepjjC5/KrVaSrNt2JVNLcQdKWiisDQKKKKACkJxQWxTcE
        nJoAUDPJp1FFABRRRQAUUUUAFJS0UAFBoooAZ/y0p1FFAC0UUUAFFFFABRRRQAUUUUAf/9k=
</value>
  </data>
</root>